<!DOCTYPE html>
<!--


       444444444       000000000            444444444
      4::::::::4     00:::::::::00         4::::::::4
     4:::::::::4   00:::::::::::::00      4:::::::::4
    4::::44::::4  0:::::::000:::::::0    4::::44::::4
   4::::4 4::::4  0::::::0   0::::::0   4::::4 4::::4
  4::::4  4::::4  0:::::0     0:::::0  4::::4  4::::4
 4::::4   4::::4  0:::::0     0:::::0 4::::4   4::::4
4::::444444::::4440:::::0 000 0:::::04::::444444::::444
4::::::::::::::::40:::::0 000 0:::::04::::::::::::::::4
4444444444:::::4440:::::0     0:::::04444444444:::::444
          4::::4  0:::::0     0:::::0          4::::4
          4::::4  0::::::0   0::::::0          4::::4
          4::::4  0:::::::000:::::::0          4::::4
        44::::::44 00:::::::::::::00         44::::::44
        4::::::::4   00:::::::::00           4::::::::4
        4444444444     000000000             4444444444



  This is the default "404: Not Found" page.
  User agents that don't "Accept" HTML will see a JSON version instead.
  You can customize the control logic for your needs in `config/404.js`

  Sails considers a request to be in a "404: Not Found" state when a user
  requests a URL which doesn't match any of your app's routes or blueprints.

  You can also trigger this response from one of your controllers or policies with:
  `return res.notFound();`


-->
<html>
  <head>
    <title>Page Not Found</title>
    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/b.normalize.min.css">
    <link rel="stylesheet" href="/styles/foundation-icons/foundation-icons.css">
    <link rel="stylesheet" href="/styles/foundation.css">
    <link rel="stylesheet" href="/styles/foundation.datepicker.css">
    <link rel="stylesheet" href="/styles/style.css">
    <!--STYLES END-->
  </head>
      <div class="vertically-centered content row">
        <div class="large-6 large-centered small-6 small-centered columns">
            <div class="panel callout radius">
                <h1>
                   404... Something's fishy here.
                </h1>
                <h2>
            	    <% if (typeof error!== 'undefined') { %>
                        <%= error %>
                    <% } else { %>
                        The page you were trying to reach doesn't exist.
                    <% } %>
                </h2>
                <p class="help">
                    <a href="http://en.wikipedia.org/wiki/HTTP_404">Why</a> might this be happening?
                </p>
            </div>
        </div>
        </div>
  <body>
      <!--SCRIPTS-->
      <script src="/js/dependencies/sails.io.js"></script>
      <script src="/js/dependencies/jquery.min.js"></script>
      <script src="/js/dependencies/foundation.min.js"></script>
      <script src="/js/dependencies/badge.js"></script>
      <script src="/js/dependencies/foundation.datepicker.min.js"></script>
      <script src="/js/dependencies/modernizr.js"></script>
      <!--SCRIPTS END-->
</html>
